#include"queue_manager.h"
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define MAXSIZE     128
 

#define QUEUE_READ_FROM_DEVICE      10201
#define QUEUE_WRITE_TO_DEVICE       10202
#define QUEUE_READ_FROM_APPLICATION 10203
#define QUEUE_READ_TO_APPLICATION   10204
#define QUEUE_READ_FROM_UTILITY     10205
#define QUEUE_READ_TO_UTILITY       10206

struct msgbuff
{
    long    mtype;
    char    mtext[MAXSIZE];
};
int message_queue_init(key_t key)
{
     int msgflg = IPC_CREAT | 0666;
     if ((msgget(key, msgflg )) < 0) 
     {
       printf("\nMessage Queue - Unable to initialised for key : %d ", key);
       return -1;
     }
     else
       printf("\nMessage Queue Intialised");
       return 0;
}

int message_queue_write(key_t key, struct msgbuff *sbuf )
{
    int msqid;
    size_t buflen;
    if ((msqid = msgget(key, 0666 )) < 0){   //Get the message queue ID for the given key
      printf("\nMessage Queue not initialised previously for key : %d ", key);
      return -1;
    }

    buflen = strlen(sbuf->mtext) + 1 ;

    if (msgsnd(msqid, sbuf, buflen, IPC_NOWAIT) < 0)
    {
        printf ("\nQueue Failure - Send : %d, %d, %s, %d\n", msqid, sbuf->mtype, sbuf->mtext, buflen);
        return -1;
    }
    return 0;
  
}

int message_queue_read(key_t key, struct msgbuff *sbuf)
{
   int msqid;
   size_t buflen;
   if ((msqid = msgget(key, 0666)) < 0){
      printf("\nMessage Queue not initialised previously for key : %d ", key);
      return -1;
   }

   buflen = strlen(sbuf->mtext) + 1 ;

   if (msgrcv(msqid, sbuf, MAXSIZE, 1, 0) < 0)
   {
        printf ("\nQueue Failure - Send : %d, %d, %s, %d\n", msqid, sbuf->mtype, sbuf->mtext, buflen);
        return -1;
   }
   else
        printf("%s\n", sbuf->mtext);
   return 0;
    
}
